


-- CONTEXTO: SISTEMA DE GESTÃO DE ESCRITÓRIO DE ADVOCACIA
 
-- NOME DA BASE DE DADOS: GESTAO_ADVOCACIA_2025
 
-- O OBJETIVO É RELACIONAR ADVOGADOS, CLIENTES, CASOS E AUDIENCIAS
-- E REALIZAR CONSULTAS USANDO DIFERENTES TIPOS DE JOIN
 
 
-- 1 USAR A BASE COM SEUS NOMES

CREATE DATABASE ABD_03361_A_FABIANE_AGUILERA_GESTAO_ADVOCACIA_2025;
USE ABD_03361_A_FABIANE_AGUILERA_GESTAO_ADVOCACIA_2025;

 
-- 2 CRIAR A TABELA ADVOGADOS
-- CAMPOS: id, nome, oab, especialidade

CREATE TABLE ADVOGADOS (

    ID INT AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(100),
    OAB VARCHAR(20),
    ESPECIALIDADE VARCHAR(100)
);
 
-- 3 CRIAR A TABELA CLIENTES
-- CAMPOS: id, nome, cpf, cidade

CREATE TABLE CLIENTES (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(100),
    CPF VARCHAR(20),
    CIDADE VARCHAR(100)
);
 
-- 4 CRIAR A TABELA CASOS
-- CAMPOS: id, id_advogado, id_cliente, descricao, status, data_abertura
-- RELACIONAR id_advogado COM ADVOGADOS
-- RELACIONAR id_cliente COM CLIENTES

CREATE TABLE CASOS (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_ADVOGADO INT,
    ID_CLIENTE INT,
    DESCRICAO VARCHAR(255),
    STATUS VARCHAR(50),
    DATA_ABERTURA DATE,
    FOREIGN KEY (ID_ADVOGADO) REFERENCES ADVOGADOS(ID),
    FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTES(ID)
);
 
-- 5 CRIAR A TABELA AUDIENCIAS
-- CAMPOS: id, id_caso, data_audiencia, local, resultado
-- RELACIONAR id_caso COM CASOS

CREATE TABLE AUDIENCIAS (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    ID_CASO INT,
    DATA_AUDIENCIA DATE,
    LOCAL VARCHAR(100),
    RESULTADO VARCHAR(100),
    FOREIGN KEY (ID_CASO) REFERENCES CASOS(ID)
);
 
-- 6 POPULAR TODAS AS TABELAS COM PELO MENOS 5 REGISTROS

INSERT INTO ADVOGADOS (NOME, OAB, ESPECIALIDADE) VALUES
('JOÃO SILVA', '12345/SP', 'DIREITO CIVIL'),
('MARIA SOUZA', '23456/SP', 'DIREITO TRABALHISTA'),
('CARLOS PEREIRA', '34567/SP', 'DIREITO PENAL'),
('ANA LIMA', '45678/SP', 'DIREITO EMPRESARIAL'),
('FERNANDA COSTA', '56789/SP', 'DIREITO DE FAMÍLIA');

INSERT INTO CLIENTES (NOME, CPF, CIDADE) VALUES
('PEDRO ALMEIDA', '111.111.111-11', 'SÃO PAULO'),
('JULIANA MORAES', '222.222.222-22', 'RIO DE JANEIRO'),
('RICARDO TAVARES', '333.333.333-33', 'SÃO PAULO'),
('LUANA BRITO', '444.444.444-44', 'CAMPINAS'),
('RODRIGO SANTOS', '555.555.555-55', 'SOROCABA');

INSERT INTO CASOS (ID_ADVOGADO, ID_CLIENTE, DESCRICAO, STATUS, DATA_ABERTURA) VALUES
(1, 1, 'PROCESSO CIVIL CONTRA EMPRESA X', 'EM ANDAMENTO', '2025-02-10'),
(2, 2, 'RECLAMAÇÃO TRABALHISTA', 'ENCERRADO', '2024-11-20'),
(3, 3, 'DEFESA CRIMINAL', 'EM ANDAMENTO', '2025-05-12'),
(4, 4, 'CONTRATO COMERCIAL', 'EM ANDAMENTO', '2025-06-01'),
(5, 5, 'DIVÓRCIO CONSENSUAL', 'ENCERRADO', '2024-12-15');

INSERT INTO AUDIENCIAS (ID_CASO, DATA_AUDIENCIA, LOCAL, RESULTADO) VALUES
(1, '2025-03-05', 'FÓRUM CENTRAL', 'ADIADA'),
(2, '2025-01-10', 'VARA TRABALHISTA', 'ENCERRADA'),
(3, '2025-07-20', 'FÓRUM CRIMINAL', 'EM JULGAMENTO'),
(4, '2025-08-15', 'VARA EMPRESARIAL', 'ADIADA'),
(5, '2025-02-25', 'VARA DE FAMÍLIA', 'ACORDO FECHADO');

 SELECT * FROM ADVOGADOS;
 
-- CONSULTAS (EXERCÍCIOS):
 
-- 7 INNER JOIN
-- MOSTRAR O NOME DO CLIENTE, O NOME DO ADVOGADO E A DESCRIÇÃO DO CASO

SELECT C.NOME AS NOME_CLIENTE, A.NOME AS NOME_ADVOGADO, CS.DESCRICAO
FROM CASOS CS
INNER JOIN CLIENTES C ON CS.ID_CLIENTE = C.ID
INNER JOIN ADVOGADOS A ON CS.ID_ADVOGADO = A.ID;
 
-- 8 LEFT JOIN
-- MOSTRAR TODOS OS CLIENTES, MESMO OS QUE AINDA NÃO TÊM NENHUM CASO

SELECT C.NOME AS NOME_CLIENTE, CS.DESCRICAO
FROM CLIENTES C
LEFT JOIN CASOS CS ON C.ID = CS.ID_CLIENTE;
 
-- 9 RIGHT JOIN
-- MOSTRAR TODOS OS CASOS, MESMO OS QUE AINDA NÃO POSSUEM CLIENTE DEFINIDO

SELECT CS.DESCRICAO, C.NOME
FROM CLIENTES C
RIGHT JOIN CASOS CS ON C.ID = CS.ID_CLIENTE;


 
-- 10 FULL JOIN (USAR UNION)
-- MOSTRAR TODOS OS CLIENTES E CASOS, MESMO SEM RELAÇÃO ENTRE ELES

SELECT C.NOME, CS.DESCRICAO
FROM CLIENTES C
LEFT JOIN CASOS CS ON C.ID = CS.ID_CLIENTE
UNION
SELECT C.NOME, CS.DESCRICAO
FROM CLIENTES C
RIGHT JOIN CASOS CS ON C.ID = CS.ID_CLIENTE;




 
-- 11 CROSS JOIN
-- GERAR UMA COMBINAÇÃO ENTRE TODOS OS ADVOGADOS E TODOS OS CLIENTES
-- (POSSÍVEIS RELAÇÕES DE ATENDIMENTO)

SELECT A.NOME, C.NOME
FROM ADVOGADOS A
CROSS JOIN CLIENTES C;



 
-- 12 MOSTRAR OS CASOS QUE ESTÃO COM STATUS 'EM ANDAMENTO' E
-- QUE FORAM ABERTOS DEPOIS DE '2025-01-01'
-- USAR INNER JOIN E WHERE

SELECT CS.DESCRICAO, CS.STATUS, CS.DATA_ABERTURA, A.NOME, C.NOME
FROM CASOS CS
INNER JOIN ADVOGADOS A ON CS.ID_ADVOGADO = A.ID
INNER JOIN CLIENTES C ON CS.ID_CLIENTE = C.ID
WHERE CS.STATUS = 'EM ANDAMENTO' AND CS.DATA_ABERTURA > '2025-01-01';



-- 13 MOSTRAR CADA ADVOGADO E QUANTOS CASOS ELE POSSUI
-- USAR GROUP BY E COUNT

SELECT A.NOME, COUNT(CS.ID) AS TOTAL_CASOS
FROM ADVOGADOS A
LEFT JOIN CASOS CS ON A.ID = CS.ID_ADVOGADO
GROUP BY A.NOME;

 
-- 14 MOSTRAR OS CLIENTES ORDENADOS PELO NOME (A–Z)
-- E SUAS RESPECTIVAS CIDADES

SELECT NOME, CIDADE
FROM CLIENTES
ORDER BY NOME ASC;

 
-- 15 MOSTRAR O TOTAL DE AUDIENCIAS REALIZADAS EM UMA COLUNA CHAMADA TOTAL_AUDIENCIAS
-- USAR COUNT E AS

SELECT COUNT(*) AS TOTAL_AUDIENCIAS
FROM AUDIENCIAS;

 
-- 16 MOSTRAR OS CLIENTES DA CIDADE DE 'SÃO PAULO' E OS CASOS ASSOCIADOS
-- USAR INNER JOIN E WHERE

SELECT C.NOME, CS.DESCRICAO, CS.STATUS
FROM CLIENTES C
INNER JOIN CASOS CS ON C.ID = CS.ID_CLIENTE
WHERE C.CIDADE = 'SÃO PAULO';

 
-- 17 MOSTRAR OS ADVOGADOS QUE NÃO POSSUEM NENHUM CASO
-- USAR LEFT JOIN E IS NULL

SELECT A.NOME
FROM ADVOGADOS A
LEFT JOIN CASOS CS ON A.ID = CS.ID_ADVOGADO
WHERE CS.ID IS NULL;

 
-- 18 MOSTRAR O NÚMERO TOTAL DE CASOS EM CADA STATUS (EX: 'EM ANDAMENTO', 'ENCERRADO')
-- USAR GROUP BY, COUNT E AS

SELECT STATUS, COUNT(*) AS TOTAL
FROM CASOS
GROUP BY STATUS;

 
-- 19 MOSTRAR O ADVOGADO COM MAIS CASOS CADASTRADOS
-- DICA: USAR GROUP BY, ORDER BY E LIMIT 1


SELECT A.NOME, COUNT(CS.ID) AS TOTAL_CASOS
FROM ADVOGADOS A
INNER JOIN CASOS CS ON A.ID = CS.ID_ADVOGADO
GROUP BY A.NOME
ORDER BY TOTAL_CASOS DESC
LIMIT 1;
