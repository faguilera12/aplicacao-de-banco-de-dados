-- CRIAR A BASE DE DADOS _ABD_03361_A_NOME_BIBLIOTECA

CREATE DATABASE ABD_03361_A_FABIANE_AGUILERA_BIBLIOTECA;
 
USE ABD_03361_A_FABIANE_AGUILERA_BIBLIOTECA;

-- CRIAR UM CONTROLE DE BIBLIOTECA

-- TEREMOS OS DADOS DOS ALUNOS, SÉRIES DOS ALUNOS E DOS LIVROS, GENEROS E EMPRESTIMOS
 
-- 1 A TABELA GENEROS TEM OS CAMPOS ID E NOME_GENERO, POPULE EM SEGUIDA COM 5 GENEROS

CREATE TABLE GENEROS (
    ID_GENERO INT AUTO_INCREMENT PRIMARY KEY,
    NOME_GENERO VARCHAR(50)
);

INSERT INTO GENEROS (NOME_GENERO)
VALUES
('Ficção Científica'),
('Romance'),
('Biografia'),
('Fantasia'),
('História');
 
-- 2 A TABELA LIVROS TEM OS CAMPOS ID, NOME_LIVRO, AUTOR, ID_GENERO, QTD_DISPONIVEL, PRECO, DATA_INSERCAO,
-- POPULE EM SEGUIDA EM COM 5 LIVROS QUE VOCÊ RECOMENDA SENDO ESSENCIAIS PARA QUALQUER UM
-- DICA: PARA DATA_INSERCAO USE O TIPO TIMESTAMP DEFAULT CURRENT_TIMESTAMP

CREATE TABLE LIVROS (
    ID_LIVRO INT AUTO_INCREMENT PRIMARY KEY,
    NOME_LIVRO VARCHAR(100),
    AUTOR VARCHAR(100),
    ID_GENERO INT,
    QTD_DISPONIVEL INT,
    PRECO DECIMAL(8,2),
    DATA_INSERCAO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_GENERO) REFERENCES GENEROS(ID_GENERO)
);

INSERT INTO LIVROS (NOME_LIVRO, AUTOR, ID_GENERO, QTD_DISPONIVEL, PRECO)
VALUES
('1984', 'George Orwell', 1, 3, 49.90),
('Dom Casmurro', 'Machado de Assis', 2, 4, 39.90),
('Steve Jobs', 'Walter Isaacson', 3, 2, 59.90),
('O Hobbit', 'J.R.R. Tolkien', 4, 5, 45.00),
('Sapiens: Uma Breve História da Humanidade', 'Yuval Noah Harari', 5, 3, 69.90);

 
-- 3 CRIAR UMA TABELA DAS SÉRIES DOS ALUNOS COM O NOME DE SERIES COM OS CAMPOS ID, NOME_SERIE
-- POPULE EM SEGUIDA EXEMPLO: ('6º'), ('7º')

CREATE TABLE SERIES (
    ID_SERIE INT AUTO_INCREMENT PRIMARY KEY,
    NOME_SERIE VARCHAR(20)
);

INSERT INTO SERIES (NOME_SERIE)
VALUES
('6º Ano'),
('7º Ano'),
('8º Ano'),
('9º Ano'),
('1º Ano EM');
 
-- 4 CRIAR A TABELA DE ALUNOS COM OS CAMPOS ID, NOME, ID_SERIE, NASCIMENTO
-- POPULE COM 10 ALUNOS

CREATE TABLE ALUNOS (
    ID_ALUNO INT AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(100),
    ID_SERIE INT,
    NASCIMENTO DATE,
    FOREIGN KEY (ID_SERIE) REFERENCES SERIES(ID_SERIE)
);

INSERT INTO ALUNOS (NOME, ID_SERIE, NASCIMENTO)
VALUES
('Ana Clara Silva', 1, '2011-03-12'),
('Bruno Santos', 1, '2010-11-04'),
('Camila Souza', 2, '2009-07-15'),
('Diego Rocha', 2, '2009-02-23'),
('Eduarda Lima', 3, '2008-10-02'),
('Felipe Alves', 3, '2008-01-19'),
('Giovana Martins', 4, '2007-05-27'),
('Henrique Costa', 4, '2007-08-12'),
('Isabela Torres', 5, '2006-09-14'),
('João Pedro Mendes', 5, '2006-06-03');
 
-- 5 TABELA EMPRESTIMOS 
-- ID, ID_ALUNO, ID_LIVRO, DATA_EMPRESTO TIMESTAMP DEFAULT CURRENT_TIMESTAMP, DEVOLVIDO BOOLEAN DEFAULT FALSE

CREATE TABLE EMPRESTIMOS (
    ID_EMPRESTIMO INT AUTO_INCREMENT PRIMARY KEY,
    ID_ALUNO INT,
    ID_LIVRO INT,
    DATA_EMPRESTIMO TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DEVOLVIDO BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (ID_ALUNO) REFERENCES ALUNOS(ID_ALUNO),
    FOREIGN KEY (ID_LIVRO) REFERENCES LIVROS(ID_LIVRO)
);

-- 6 INSERIR NA TABELA DE EMPRESTIMOS A COLUNA DATA_DEVOLUCAO_PREVISTA

ALTER TABLE EMPRESTIMOS
ADD COLUMN DATA_DEVOLUCAO_PREVISTA DATE;
 
-- 7 POPULAR A TABELA EMPRESTIMOS COM 5 ITENS

INSERT INTO EMPRESTIMOS (ID_ALUNO, ID_LIVRO, DATA_DEVOLUCAO_PREVISTA)
VALUES
(1, 1, '2025-10-20'),  -- Ana Clara pegou "1984"
(2, 2, '2025-10-22'),  -- Bruno pegou "Dom Casmurro"
(3, 3, '2025-10-18'),  -- Camila pegou "Steve Jobs"
(4, 4, '2025-10-25'),  -- Diego pegou "O Hobbit"
(5, 5, '2025-10-27');  -- Eduarda pegou "Sapiens"
 
-- 8 MOSTRAR TODOS OS LIVROS DISPONÍVEIS COM QUANTIDADE MAIOR QUE 3

SELECT * 
FROM LIVROS
WHERE QTD_DISPONIVEL > 3;
 
-- 9 MOSTRAR TODOS OS ALUNOS DA 6º SÉRIE
SELECT * FROM ALUNOS
WHERE ID_SERIE = (
    SELECT ID_SERIE FROM SERIES WHERE NOME_SERIE = '6º Ano'
);

 
-- 10 REGISTRAR UM EMPRÉSTIMO (ALUNO PEDRO LIMA PEGOU "O HOBBIT" EM 2025-10-10 E PRETENDE DEVOLVER 2025-10-25
INSERT INTO ALUNOS (NOME, ID_SERIE, NASCIMENTO)
VALUES ('Pedro Lima', 3, '2008-04-20');
INSERT INTO EMPRESTIMOS (ID_ALUNO, ID_LIVRO, DATA_EMPRESTIMO, DATA_DEVOLUCAO_PREVISTA)
VALUES (11, 4, '2025-10-10', '2025-10-25');
 
-- 11 DIMINUIR A QUANTIDADE DISPONÍVEL DO LIVRO "O HOBBIT" EM 1
-- DICA: PODE USAR SUBTRAÇÃO! QTD_DISPONIVEL = QTD_DISPONIVEL - 1

SET SQL_SAFE_UPDATES = 0;

UPDATE LIVROS
SET QTD_DISPONIVEL = QTD_DISPONIVEL - 1
WHERE NOME_LIVRO = 'O Hobbit';

SET SQL_SAFE_UPDATES = 1;

SELECT * FROM LIVROS;


 
-- 12 MOSTRAR O TOTAL DE LIVROS DISPONÍVEIS EM UMA COLUNA CHAMADA TOTAL_LIVROS
SELECT SUM(QTD_DISPONIVEL) AS TOTAL_LIVROS
FROM LIVROS;
 
-- 13 ALTERAR O NOME DA TABELA LIVROS PARA LIVROS_EM_ESTOQUE
RENAME TABLE LIVROS TO LIVROS_EM_ESTOQUE;

SELECT * FROM LIVROS_EM_ESTOQUE;
 
-- 14 MOSTRAR O VALOR TOTAL INVESTIDO EM LIVROS EM UMA COLUNA CHAMADA VALOR_TOTAL_BIBLIOTECA
-- DICA: USE SUM(COLUNA_1 * COLUNA_2)

SELECT SUM(PRECO * QTD_DISPONIVEL) AS VALOR_TOTAL_BIBLIOTECA
FROM LIVROS_EM_ESTOQUE;
 
-- 15 MOSTRAR OS LIVROS DISPONIVEIS COM
-- QUANTIDADE MAIOR QUE 2, PREÇO MAIOR QUE 50 REAIS E GÊNERO SEJA FANTASIA OU LITERATURA
-- DICA: USE WHERE E IN()

SELECT *
FROM LIVROS_EM_ESTOQUE
WHERE QTD_DISPONIVEL > 2
  AND PRECO > 50
  AND ID_GENERO IN (
      SELECT ID_GENERO FROM GENEROS
      WHERE NOME_GENERO IN ('Fantasia', 'Literatura')
  );

  

-- 16 FAZER UMA TRANSAÇÃO PARA EMPRESTAR UM LIVRO
-- AO EMPRESTAR, DIMINUIR 1 DO ESTOQUE E REGISTRAR O EMPRÉSTIMO
-- DICA: USE O START TRANSACTION; 
-- FAÇA AS OPERAÇÕES
-- POR FIM DÊ COMMIT;

-- Inicia a transação
START TRANSACTION;

-- 1 Verifica o estoque do livro desejado
SELECT QTD_DISPONIVEL 
FROM LIVROS_EM_ESTOQUE 
WHERE ID_LIVRO = 4;

-- 1 Execute o SELECT primeiro — ele mostra se o livro ainda tem exemplares.
-- 2 Se o número for maior que 0, continue com os demais comandos.
-- 3 Se for 0, digite:
ROLLBACK;


-- 2 Diminui 1 do estoque
UPDATE LIVROS_EM_ESTOQUE
SET QTD_DISPONIVEL = QTD_DISPONIVEL - 1
WHERE ID_LIVRO = 4;

-- 3️ Registra o empréstimo
INSERT INTO EMPRESTIMOS (ID_ALUNO, ID_LIVRO, DATA_EMPRESTIMO, DATA_DEVOLUCAO_PREVISTA)
VALUES (11, 4, '2025-10-10', '2025-10-25');

-- 4️ Confirma a transação
COMMIT;



